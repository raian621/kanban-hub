// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id            Int                  @id @default(autoincrement())
  email         String               @unique @db.VarChar(255)
  createdAt     DateTime             @default(now())
  username      String               @unique @db.VarChar(127)
  firstName     String               @db.VarChar(127)
  lastName      String               @db.VarChar(127)
  passhash      String               @db.VarChar(100)
  groups        UserInGroup[]
  organizations UserInOrganization[]
}

model Group {
  id            Int                   @id @default(autoincrement())
  createdAt     DateTime              @default(now())
  name          String                @db.VarChar(255)
  description   String                @db.Text
  users         UserInGroup[]
  organizations GroupInOrganization[]
}

model Organization {
  id          Int                   @id @default(autoincrement())
  createdAt   DateTime              @default(now())
  name        String                @db.VarChar(255)
  description String                @db.Text
  users       UserInOrganization[]
  groups      GroupInOrganization[]
}

model UserInGroup {
  user      User     @relation(fields: [userId], references: [id])
  group     Group    @relation(fields: [groupId], references: [id])
  createdAt DateTime @default(now())
  userId    Int
  groupId   Int

  @@id([userId, groupId])
}

model UserInOrganization {
  user           User         @relation(fields: [userId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])
  createdAt      DateTime     @default(now())
  userId         Int
  organizationId Int

  @@id([userId, organizationId])
}

model GroupInOrganization {
  group          Group        @relation(fields: [groupId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])
  createdAt      DateTime     @default(now())
  groupId        Int
  organizationId Int

  @@id([groupId, organizationId])
}

model Card {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String
  description String   @db.Text
  pipeline    Pipeline @relation(fields: [pipelineId], references: [id])
  pipelineId  Int
  board       Board    @relation(fields: [boardId], references: [id])
  boardId     Int
}

model Pipeline {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String
  description String   @db.Text
  board       Board    @relation(fields: [boardId], references: [id])
  boardId     Int
  cards       Card[]
}

model Board {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  title       String
  description String     @db.Text
  cards       Card[]
  pipelines   Pipeline[]
}
